# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
'body':
  'ctrl-shift-N': 'application:new-file'
  'ctrl-q': 'core:close'
  'ctrl-u': 'tree-view:reveal-active-file'

'atom-workspace':
  'ctrl-j': 'command-palette:toggle'
  'ctrl-o': 'advanced-open-file:toggle'

'.tree-view':
  'a': 'tree-view:add-file'
  'shift-A': 'tree-view:add-folder'

'.editor':
  'ctrl-enter': 'editor:newline-below'
  'ctrl-shift-enter': 'editor:newline-above'
  'ctrl-shift-H': 'emacs-plus:backward-kill-word'

'atom-workspace atom-text-editor':
  'ctrl-t': 'fuzzy-finder:toggle-file-finder'
  'ctrl-shift-T': 'fuzzy-finder:toggle-buffer-finder'

'atom-workspace atom-text-editor:not([mini])':
  'ctrl-/': 'core:undo'

'atom-workspace atom-text-editor.emacs-plus:not([mini])':
  'alt-j': 'symbols-view:toggle-file-symbols'
  'ctrl-m': 'go-to-line:toggle'
  'ctrl-]': 'editor:indent-selected-rows'
  'ctrl-[': 'editor:outdent-selected-rows'
  'ctrl-o': 'unset!'
  'ctrl-j': 'unset!'
